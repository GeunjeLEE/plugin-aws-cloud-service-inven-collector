name: "[Push] Build dev with scan"

on:
  workflow_dispatch:

env:
  SLACK_WEBHOOK_URL: ${{secrets.SLACK_WEBHOOK_URL}}

jobs:
  versioning:
    runs-on: ubuntu-latest
    outputs:
      output_version: ${{ steps.versioning.outputs.VERSION }}
    steps:
      - uses: actions/checkout@v2
  
      - name: get current date
        run: |
          sudo ln -sf /usr/share/zoneinfo/Asia/Seoul /etc/localtime
          echo "TIME=$(date +'%Y%m%d.%H%M%S')" >> $GITHUB_ENV

      - name: set version with current date
        id: versioning
        run: |
          echo "VERSION=$(cat src/VERSION | cut -c 2-).${{ env.TIME }}" >> $GITHUB_OUTPUT

      - name: Notice when job fails
        if: failure()
        uses: 8398a7/action-slack@v3.2.0
        with:
          status: ${{job.status}}
          fields: repo,workflow,job
          author_name: Github Action Slack

  image-scan:
    if: github.repository_owner == 'cloudforet-io'
    needs: versioning
    runs-on: ubuntu-latest
    outputs:
      output_service: ${{ steps.get_service.outputs.SERVICE }}
    steps:
      - uses: actions/checkout@v2

      - name: get service name
        id: get_service
        run: |
          echo "SERVICE=$(echo ${{ github.repository }} | cut -d '/' -f2)" >> $GITHUB_OUTPUT

      - name: Build with local output
        run: docker build -t pyengine/${{ steps.get_service.outputs.SERVICE }}:cache --output type=tar,dest=./output.tar .

      - name: Import compressed docker image
        run: tar -c output.tar | docker import - pyengine/${{ steps.get_service.outputs.SERVICE }}:cache

      - name: Scan image
        uses: anchore/scan-action@v3
        with:
          image: pyengine/${{ steps.get_service.outputs.SERVICE }}:cache
          output-format: table

      - name: Notice when job fails
        if: failure()
        uses: 8398a7/action-slack@v3.2.0
        with:
          status: ${{job.status}}
          fields: repo,workflow,job
          author_name: Github Action Slack

  docker-push:
    if: github.repository_owner == 'cloudforet-io'
    needs: [versioning, image-scan]
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ needs.versioning.outputs.output_version }}
      SERVICE: ${{ needs.image-scan.outputs.output_service }}
    steps:
      - uses: actions/checkout@v2

      - name: set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Upload docker
        uses: docker/build-push-action@v2
        with:
          path: .
          repository: pyengine/${{ env.SERVICE }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tags: ${{ env.VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Notice when job fails
        if: failure()
        uses: 8398a7/action-slack@v3.2.0
        with:
          status: ${{job.status}}
          fields: repo,workflow,job
          author_name: Github Action Slack

  notification:
    runs-on: ubuntu-latest
    needs: docker-push
    steps:
      - name: Slack
        if: always()
        uses: 8398a7/action-slack@v3.2.0
        with:
          status: ${{job.status}}
          fields: repo,message,commit,author,action,ref,workflow,job
          author_name: Github Action Slack
